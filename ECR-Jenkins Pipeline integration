node
{

    def buildnumber = BUILD_NUMBER
    
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))])

 stage('Git Clone'){
 git url: 'https://github.com/DockerVamshiTest/maven-web-application.git' }  
 
 stage('maven Build'){
         def mavenHome = tool name:"Maven"
     sh "${mavenHome}/bin/mvn clean package"
 }

// aws CLI should be installed in jenkins server

stage ('Docker Image'){
    // authenticating to private AWS ECR repo
    sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven"
    sh "docker build -t 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven:${buildnumber} ."
}

stage ('Docker login and push')
{
    sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven"
    sh "docker push 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven:${buildnumber}"
} 
stage("deploy as docker container in deploy server"){
    sshagent(['Dockerserver']) {
    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.11.189 docker rm -f vamsappcontainer || true"
    sh "ssh ubuntu@172.31.11.189 aws ecr get-login-password --region ap-south-1 | ssh ubuntu@172.31.11.189 docker login --username AWS --password-stdin 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven:${buildnumber}"
    sh "ssh ubuntu@172.31.11.189 docker run -d --name AWSjenkinsmavencontainer -p 9090:8080 778151802318.dkr.ecr.ap-south-1.amazonaws.com/jenkinsmaven:${buildnumber}"
    }
}
}
